?transform()
?cut
tips <- read.table("/media/removable/USB Drive/S670/tips.txt", header = TRUE)
tips
tips$size
tips$sizebin <- cut(tips$size, breaks = 6)
tips
tips$sizebin <- cut(tips$size, seq(1,6,1))
tips
tips$sizebin <- cut(tips$size, seq(0,6,1))
tips
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() +facet_grid(~sizebin))
require(ggplot2)
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() +facet_grid(~sizebin))
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() +facet_grid(~sizebin))
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot()
require(ggplot2)
ggplot(tips, aes(sample = (tips$tip/tips$total_bill))) + stat_qq()
ggplot(tips, aes(sample=(tips$tip/tips$total_bill), xlab = "Party size (ranging from 1 to 6)", ylab = "Percentage tipped", title(main = "Tip percentage by party size")) + geom_boxplot() +facet_grid(~sizebin))
ggplot(tips, aes(sample=(tips$tip/tips$total_bill), xlab("Party size (ranging from 1 to 6)"), ylab = "Percentage tipped", title(main = "Tip percentage by party size")) + geom_boxplot() +facet_grid(~sizebin))
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() + facet_grid(~sizebin)) + labs(x="Party size (Range of 1 to 6)", y="Tip percentage")
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() + facet_grid(~sizebin)) + labs(x="Party size (Range of 1 to 6)", y="Tip percentage")
tips$sizebin <- cut(tips$size, seq(0,6,1))
ggplot(tips, aes(sample=(tips$tip/tips$total_bill)) + geom_boxplot() + facet_grid(~sizebin)) + labs(x="Party size (Range of 1 to 6)", y="Tip percentage")
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot()
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage")
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size")
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22))
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size") theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=32, hjust=0)) +
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill))) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size") + theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=32, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22))
tips.lm <- lm((tips$tip/tips$total_bill) ~ tips$size, data = tips)
tips.lim
tips.lm
tips.lm <- lm((tips$tip/tips$total_bill)*100 ~ tips$size, data = tips)
tips.lm
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill)*100)) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size") + theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=32, hjust=0)) +
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill)*100)) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size") + theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=32, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22))
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22))
ggplot(tips, aes(x = tips$sizebin, y=(tips$tip/tips$total_bill)*100)) + geom_boxplot() + labs(x="Party size (Range of 1 to 6)", y="Tip percentage") + ggtitle("Tip percentage by party size") + theme(plot.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=32, hjust=0)) +
theme(axis.title = element_text(family = "Trebuchet MS", color="#666666", face="bold", size=22))
ggplot(tips, aes(sample = (tips$tip/tips$total_bill)*100)) + stat_qq()
tips.lm <- lm((tips$tip/tips$total_bill)*100 ~ tips$size, data = tips)
tips.lm
residuals(tips.lm)
tips.res <- data.frame(party.size=tips$sizebin, residual=residuals(tips.lm))
ggplot(tips.res, aes(x=party.size, y=residual)) + statqq() + facet_wrap(~party.size, ncol = 2)
ggplot(tips.res, aes(x=party.size, y=residual)) + stat_qq() + facet_wrap(~party.size, ncol = 2)
ggplot(tips.res, aes(x=party.size, y=residual)) + stat_qq() + facet_wrap(~party.size, ncol = 2)
ggplot(tips.res, aes(sample = residual)) + stat_qq() + facet_wrap(~party.size, ncol = 2)
ggplot(tips.res, aes(x= residual)) + stat_ecdf()
ggplot(tips.res, aes(sample = residual)) +stat_qq()
tips.res
round(mean(tips.res$residual), 3)
round(sd(tips.res$residual), 3)
ggplot(tips.res, aes(sample = residual)) +stat_qq() + geom_abline(intercept = 0, slope = summary(tips.lm)$sigma)
tips <- read.table("/media/removable/USB Drive/S670/tips.txt", header = TRUE)
tip.percent <- (tips$tip / tips$total_bill)*100
require(ggplot2) echo = FALSE
library(ggplot2)
library(tidyr)
votes <- read.table("./pennsylvania.txt", header = TRUE)
votes.long <- votes %>% gather(Candidate, Votes, Clinton:Obama)
ggplot(votes.long, aes(sample = Votes)) + stat_qq() + facet_wrap(~Candidate)
votes.long.log <- votes.long
votes.long.log[,3] <- log10(votes.long[,3])
ggplot(votes.long.log, aes(sample = Votes)) + stat_qq() + facet_wrap(~Candidate) + geom_abline(intercept = 4, slope = .7)
ggplot(votes.long.log, aes(sample = Votes)) + stat_qq(distribution = qunif) + facet_wrap(~Candidate)
ggplot(votes.long, aes(sample = Votes)) + stat_qq(distribution = qunif) + facet_wrap(~Candidate)
ggplot(votes.long.log, aes(x = County, y = Votes)) + geom_point() + facet_wrap(~Candidate)
Clinton <- votes.long$Votes[votes.long$Candidate=="Clinton"]
Obama <- votes.long$Votes[votes.long$Candidate=="Obama"]
qq.df <- as.data.frame(qqplot(Clinton, Obama, plot.it = FALSE))
ggplot(qq.df, aes(x=x,y=y)) + geom_point() + geom_abline()
ggplot(qq.df, aes(x=(x+y)/2, y=y-x)) + geom_point() + geom_abline(slope=0)
Clinton.log <- votes.long.log$Votes[votes.long.log$Candidate=="Clinton"]
Obama.log <- votes.long.log$Votes[votes.long.log$Candidate=="Obama"]
qq.df.log <- as.data.frame(qqplot(Clinton.log, Obama.log, plot.it = FALSE))
ggplot(qq.df.log, aes(x=x, y=y)) + geom_point() + geom_abline()
ggplot(qq.df.log, aes(x=(x+y)/2, y=y-x)) + geom_point() + geom_abline(slope=0)
ggplot(qq.df.log, aes(x=(x+y)/2, y=y-x)) + geom_point() + geom_abline(slope=0)
ggplot(qq.df.log, aes(x=(x+y)/2, y=y-x)) + geom_point() + geom_abline(slope=0)
ggplot(qq.df.log, aes(x=(x+y)/2, y=y-x)) + geom_point() + geom_abline(slope=0)
pew.data <- read.csv("/media/Datas/S670/Pew.data.final.HW4.csv", head = TRUE)
pew.data <- read.csv("/media/Datas/S670/Pew.data.final.HW4.csv", head = TRUE)
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
total.scores <- rowSums(score.by.country[,-1])
score.by.country <- cbind(score.by.country, total.scores)
final.score.by.country <- score.by.country[,c(1,6)]
final.score.by.country
ggplot(score.by.country, aes(x = country, y = total.scores)) + geom_point() + scale_size(range = c(3,10)) + labs(main = "Total standardized score by country", y = "Total scores", x = "Country")
library(ggplot2)
install.packages("GGally")
library(GGally)
View(score.by.country)
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score))) + geom_point()
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
avg.religion <- colSums(score.by.country$religion.score)
avg.religion <- colSums(score.by.country$religion.score)
score.by.country$religion.score
avg.religion <- avg(score.by.country$religion.score)
avg.religion <- avgerage(score.by.country$religion.score)
avg.religion <- mean(score.by.country$religion.score)
avg.religion
avg.religion <- sum(score.by.country$religion.score)
avg.religion
score.by.country$religion.score
avg.religion <- mean(score.by.country[["religion.score"]])
avg.religion
avg.religion <- sum(score.by.country[["religion.score"]])
avg.religion
avg.religion <- colMeans(score.by.country)
avg.religion <- colMeans(score.by.country$religion.score)
avg.religion <- colMeans(score.by.country[-1,])
avg.religion <- colMeans(score.by.country[,-1])
avg.religion
religion.score
avg.religion <- mean(religion.score)
avg.religion
avg.religion <- mean(religion.score, na.rm = TRUE)
avg.religion
summary(religion.score)
avg.religion <- mean(score.by.country$birthplace.score)
avg.religion
ggplot(score.by.country, aes(x = country, y = total.scores)) + geom_point() + scale_size(range = c(3,10)) + labs(main = "Total standardized score by country", y = "Total scores", x = "Country")
avg.religion <- mean(score.by.country$birthplace.score)
avg.religion <- mean(as.numeric(score.by.country$birthplace.score))
avg.religion
avg.religion <- mean(as.character(score.by.country$birthplace.score))
what <- as.character(religion.score)
work <- as.numeric(what)
avg.religion <- mean(work)
avg.religion
work
what
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE)
library(ggplot2)
library(GGally)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
avg.religion <- mean(score.by.country$religion.score)
avg.religion
pew.data
customs.score
score.by.country$religion.score <- c(0.49968, -0.106866)
score.by.country$religion.score
score.by.country$religion.score <- c(0.49968, -0.106866, -0.311285, -0.01743255, 1.3820730, 0.90439, 0.939202, -0.4083846, 1.0561559, -0.53230049, -0.5670624, -0.0570308, -0.233095, -2.6621072395)
score.by.country$religion.score
avg.religion <- mean(score.by.country$religion.score)
avg.religion
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE, sep = ",")
library(ggplot2)
library(GGally)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
avg.religion <- mean(score.by.country$religion.score)
avg.religion
score.by.country$religion.score <- c(0.49968, -0.106866, -0.311285, -0.01743255, 1.3820730, 0.90439, 0.939202, -0.4083846, 1.0561559, -0.53230049, -0.5670624, -0.0570308, -0.233095, -2.6621072395)
avg.religion <- mean(score.by.country$religion.score)
avg.religion
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point()
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point() + labs(main="Importance of customs, birthplace, and religion to national identity")
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point() + labs(title="Importance of customs, birthplace, and religion to national identity")
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point() + labs(title="Importance of customs, birthplace, and religion to national identity", x="Standardized customs score", y="Standardized birthplace score")
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point() + labs(title="Importance of customs, birthplace, and religion to national identity", x="Standardized customs score", y="Standardized birthplace score", colour = "Higher than average religion score?")
ggplot(score.by.country, aes(x = country, y = total.scores)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores, label = median(total.scores))) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
# 2. Bivariate analysis. Use ggpairs() in the GGally library to create a scatterplot matrix. There should be 4-choose-2 = 6 pairs of
# variables plotted. Identify which of these six pairs are strongly related, and which are weakly related.
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
# From the pairwise correlation values shown in the plot above, it is clear that customs and birthplace are the most strongly related national identity variables across all countries,
# with religion and customs falling into a rather distant second place.. Conversely, language and customs, language and birthplace, and language and religion are quite weakly related.
# Interstingly (given American religious right political talking points), language doesn't seem to be strongly related to any of the other metrics of national identity.
# 3. Trivariate analysis. You should find that three of the variables are quite strongly related, while the other variable is more
# weakly related. Draw a scatterplot of the two most strongly correlated variables. Then color the points according to the weakly related variable
# (e.g. make the points where the weakly related variable is above average one color, and the weakly related variable is below average another color.)
# What does this tell you that was not obvious from the bivariate analysis?
# Customs, birthplace and religion.
score.by.country$religion.score <- c(0.49968, -0.106866, -0.311285, -0.01743255, 1.3820730, 0.90439, 0.939202, -0.4083846, 1.0561559, -0.53230049, -0.5670624, -0.0570308, -0.233095, -2.6621072395)
avg.religion <- mean(score.by.country$religion.score)
# For some reason calculating the sum (and so, the average) of these values gave super low numbers (e-12 low). I think it was some weird formatting from excel or something.
# So I entered the religion scores manually so I could compute the average, and it worked!
ggplot(score.by.country, aes(x = customs.score, y = birthplace.score, group = religion.score, color = factor(religion.score>avg.religion))) + geom_point() + labs(title="Importance of customs, birthplace, and religion to national identity", x="Standardized customs score", y="Standardized birthplace score", colour = "Higher than average religion score?")
ggplot(score.by.country, aes(x = country, y = total.scores)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
total.scores
score.by.country
ggplot(score.by.country, aes(x = country, y = total.scores, axis.text.x = angle(90))) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=90)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45, vjust = 1)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45, vjust = 0)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45, vjust = 0.5)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
knitr::opts_chunk$set(echo = TRUE)
avg.religion <- mean(score.by.country$religion.score)
knitr::opts_chunk$set(echo = TRUE)
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE)
library(ggplot2)
library(GGally)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
total.scores <- rowSums(score.by.country[,-1])
score.by.country <- cbind(score.by.country, total.scores)
final.score.by.country <- score.by.country[,c(1,6)]
final.score.by.country
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45, vjust = 0.5)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
avg.religion <- mean(score.by.country$religion.score)
score.by.country$religion.score <- c(0.49968, -0.106866, -0.311285, -0.01743255, 1.3820730, 0.90439, 0.939202, -0.4083846, 1.0561559, -0.53230049, -0.5670624, -0.0570308, -0.233095, -2.6621072395)
avg.religion <- mean(score.by.country$religion.score)
avg.religion
View(religion)
score.by.country$religion.score <- c(0.49968, -0.106866, -0.311285, -0.01743255, 1.3820730, 0.90439, 0.939202, -0.4083846, 1.0561559, -0.53230049, -0.5670624, -0.0570308, -0.233095, 0)
avg.religion <- mean(score.by.country$religion.score)
avg.religion
View(final.score.by.country)
View(religion)
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
View(religion)
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
avg.language <- mean(score.by.country$language.score)
avg.language
language$Standardized.score
score.by.country$language.score
score.by.country$language.score <- c(-0.51765024, -1.97338084,  0.91732128,  0.93808037,  0.42429309,  0.93808037, -0.98559454,  1.60929067, -0.03413663, -0.94580630, -0.68891266,  0.95842838, -0.34638781, -0.29362515,)
score.by.country$language.score
score.by.country$language.score <- c(-0.51765024, -1.97338084,  0.91732128,  0.93808037,  0.42429309,  0.93808037, -0.98559454,  1.60929067, -0.03413663, -0.94580630, -0.68891266,  0.95842838, -0.34638781, -0.29362515)
score.by.country$language.score
avg.language <- mean(score.by.country$language.score)
avg.language
score.by.country$language.score <- c(-0.5176502, -1.97338, 0.917321, 0.93808, 0.424293, 0.93808, -0.985594, 1.60929, -0.0341366, -0.94581, -0.688913, 0.9584284, -0.3463878, -0.29362515)
avg.language <- mean(score.by.country$language.score)
avg.language
language <- pew.data[15:28,]
View(language)
language.score <- language$Standardized.score
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
View(score.by.country)
score.by.country <- score.by.country[,-(2:3)]
View(score.by.country)
total.scores <- rowSums(score.by.country[,-1])
sum(score.by.country$language.score)
sum(language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
avg.language
score.by.country$language.score <- c(-.5176502, -1.97338, .917321, .93808, .424293, .93808, -.985594, 1.60929, -.0341366, -.94581, -.688913, .9584284, -.3463878, -.29362515)
avg.language <- mean(score.by.country$language.score)
avg.language
score.by.country$language.score
View(score.by.country)
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
View(score.by.country)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
mean(score.by.country$language.score)
language <- pew.data[15:28,]
language.score <- language$Standardized.score
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
avg.language <- mean(score.by.country$language.score)
avg.language
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
pew.data <- read.csv("./Pew.data.final.HW4.csv", head = TRUE)
library(ggplot2)
library(GGally)
birthplace <- pew.data[1:14,]
birthplace.score <- birthplace$Standardized.score
language <- pew.data[15:28,]
language.score <- language$Standardized.score
religion <- pew.data[29:42,]
religion.score <- religion$Standardized.score
customs <- pew.data[43:56,]
customs.score <- customs$Standardized.score
country <- customs$Country
score.by.country <- cbind(birthplace, birthplace.score, language.score, religion.score, customs.score)
score.by.country <- score.by.country[,-(2:3)]
total.scores <- rowSums(score.by.country[,-1])
score.by.country <- cbind(score.by.country, total.scores)
final.score.by.country <- score.by.country[,c(1,6)]
final.score.by.country
ggplot(score.by.country, aes(x = country, y = total.scores)) + theme(axis.text.x = element_text(angle=45, vjust = 0.5)) + geom_boxplot() + scale_size(range = c(3,10)) + labs(title = "Total standardized score by country", y = "Total scores", x = "Country")
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cwx = 2)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cwx = 4)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cwx = 4)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex = 4)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex = 42)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex = 2)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex=2)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex=1.5)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language), cex)) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
# Customs, birthplace and religion.
avg.language <- mean(score.by.country$language.score)
ggplot(score.by.country, aes(x = religion.score, y = birthplace.score, group = language.score, color = factor(language.score>avg.language))) + geom_point() + labs(title="Importance of religion, birthplace, and language to national identity", x="Standardized religion score", y="Standardized birthplace score", colour = "Higher than average language score?")
language.avg <- rep(NA, nrow(score.by.country))
language.avg[score.by.country$language.score>avg.language] = "Above average language score"
language.avg[score.by.country$language.score<avg.language] = "Below average language score"
final.question <- data.frame(score.by.country, language.avg)
ggpairs(score.by.country, columns = c("birthplace.score", "language.score", "religion.score", "customs.score"))
View(final.question)
ggpairs(final.question, columns = c("religion.score", "birthplace.score"), aes(colour = language.avg))
